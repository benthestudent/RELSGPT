{"ast":null,"code":"var _jsxFileName = \"/Users/granitesoul/Documents/school/seniorproj/app/src/chatbot.js\";\nimport ChatBot from 'react-chatbotify';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ASK_ENDPOINT = \"http://127.0.0.1:5000/ask\";\nconst Chat = () => {\n  async function askQuestion(q) {\n    try {\n      const response = await fetch(ASK_ENDPOINT);\n      const data = await response.json();\n      console.log(data);\n      return data.body;\n    } catch (error) {\n      return \"Something went wrong\";\n    }\n  }\n  ;\n  const flow = {\n    start: {\n      message: \"Do you have any questions about religious studies?\",\n      path: \"loop\"\n    },\n    loop: {\n      message: async params => {\n        const result = await askQuestion(params.userInput);\n        return result;\n      },\n      path: \"loop\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChatBot, {\n    options: {\n      theme: {\n        embedded: true\n      }\n    },\n    flow: flow\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["ChatBot","React","jsxDEV","_jsxDEV","ASK_ENDPOINT","Chat","askQuestion","q","response","fetch","data","json","console","log","body","error","flow","start","message","path","loop","params","result","userInput","options","theme","embedded","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/granitesoul/Documents/school/seniorproj/app/src/chatbot.js"],"sourcesContent":["import ChatBot from 'react-chatbotify';\nimport React from \"react\";\n\nconst ASK_ENDPOINT = \"http://127.0.0.1:5000/ask\"\n\nconst Chat = () => {\n    async function askQuestion(q) {\n        try {\n            const response = await fetch(ASK_ENDPOINT);\n            const data = await response.json();\n            console.log(data)\n            return data.body;\n        } catch (error) {\n            return \"Something went wrong\";\n        }\n    };\n    const flow={\n        start: {\n            message: \"Do you have any questions about religious studies?\",\n            path: \"loop\"\n        },\n        loop: {\n            message: async (params) => {\n                const result = await askQuestion(params.userInput);\n                return result;\n            },\n            path: \"loop\",\n        }\n    };\n\n    return (\n        <ChatBot options={{theme: {embedded: true}}} flow={flow} />\n    );\n}\n\n\nexport default Chat;"],"mappings":";AAAA,OAAOA,OAAO,MAAM,kBAAkB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf,eAAeC,WAAWA,CAACC,CAAC,EAAE;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,YAAY,CAAC;MAC1C,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,OAAOA,IAAI,CAACI,IAAI;IACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAO,sBAAsB;IACjC;EACJ;EAAC;EACD,MAAMC,IAAI,GAAC;IACPC,KAAK,EAAE;MACHC,OAAO,EAAE,oDAAoD;MAC7DC,IAAI,EAAE;IACV,CAAC;IACDC,IAAI,EAAE;MACFF,OAAO,EAAE,MAAOG,MAAM,IAAK;QACvB,MAAMC,MAAM,GAAG,MAAMhB,WAAW,CAACe,MAAM,CAACE,SAAS,CAAC;QAClD,OAAOD,MAAM;MACjB,CAAC;MACDH,IAAI,EAAE;IACV;EACJ,CAAC;EAED,oBACIhB,OAAA,CAACH,OAAO;IAACwB,OAAO,EAAE;MAACC,KAAK,EAAE;QAACC,QAAQ,EAAE;MAAI;IAAC,CAAE;IAACV,IAAI,EAAEA;EAAK;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEnE,CAAC;AAAAC,EAAA,GA5BK1B,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}